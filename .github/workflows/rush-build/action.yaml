name: Reusable rush build workflow

inputs:
  SSH_KEY:
    requited: true
  KNOWN_HOSTS:
    requited: true
  TS_OAUTH_SECRET:
    requited: true
  TS_OAUTH_CLIENT_ID:
    requited: true
  BUILD_PARAMETERS:
    required: false
    description: "Build parameters to pass to rush build"

runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Connect to Tailscale
      uses: tailscale/github-action@v2
      with:
        oauth-client-id: ${{ inputs.TS_OAUTH_CLIENT_ID }}
        oauth-secret: ${{ inputs.TS_OAUTH_SECRET }}
        tags: tag:ci
        args: "--exit-node=pfsense"

    - name: Testing Server Online?
      shell: bash
      run: |
        tailscale status
        tailscale ping ci.internal.tinyburg.app

    - name: Start ssh agent
      shell: bash
      run: |
        eval "$(ssh-agent -s)"
        echo $SSH_AUTH_SOCK
        echo "SSH_AUTH_SOCK=${SSH_AUTH_SOCK}" >> $GITHUB_ENV

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ inputs.SSH_KEY }}
        known_hosts: ${{ inputs.KNOWN_HOSTS }}

    - name: Add SSH key to agent
      shell: bash
      run: |
        echo $SSH_AUTH_SOCK
        ssh-add -D
        ssh-add

    - name: Testing Server Reachable?
      shell: bash
      run: ssh ci@ci.internal.tinyburg.app "echo 'Hi, Mom!'"

    - if: runner.os == 'Linux'
      name: Start xvfb
      shell: bash
      run: |
        sudo /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "DISPLAY=:99" >> $GITHUB_ENV

    - name: Setup rush build cache
      uses: gigara/rush-cache@v2

    - name: Setup rush install cache
      uses: actions/cache@v3
      with:
        path: |
          common/temp/install-run
          ~/.rush
        key: rush-install-run-cache-${{ hashFiles('rush.json') }}

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: |
          common/temp/pnpm-store
          ~/.cache/puppeteer
        key: pnpm-cache-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Rush Install
      shell: bash
      run: |
        node common/scripts/install-run-rush.js install
        node common/scripts/install-run-rush.js update-autoinstaller --name rush-prettier
        node common/scripts/install-run-rush.js update-autoinstaller --name rush-commitlint
        node common/scripts/install-run-rush.js update-autoinstaller --name rush-github-action-cache

    - name: Rush build and test
      shell: bash
      run: node common/scripts/install-run-rush.js test --timeline --production ${{ inputs.BUILD_PARAMETERS }}
      env:
        ARCHITECT_DOCKER_HOST: "ssh://ci@ci.internal.tinyburg.app:22"
