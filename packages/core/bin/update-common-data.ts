import fs from "node:fs/promises";
import loadApk from "@tinyburg/apks";
import architect from "@tinyburg/architect";
import { bootstrapAgentOnRemote, cleanupAgent, GetterAgents } from "@tinyburg/insight";

// Banner to put at the top of every data file
const sourceCodeBanner: string = `/**
 * This file was auto-generated by a frida agent
 *
 * Generated by: __filename
 *
 * with TinyTower version: __version
 *
 * on: __date
 */
`;

// Create a container to extract information from
const apk: string = await loadApk("patched", "apkpure-4.14.0-with-frida-gadget");
const { container, installApk, launchGame } = await architect();
await installApk(apk);
await launchGame();

// To know where to put the generated source code
// eslint-disable-next-line @rushstack/typedef-var
const AgentOutputFileMap = {
    "../src/data/bitbook-posts.ts": GetterAgents.BitbookAgent,
    "../src/data/bitizen.ts": GetterAgents.BitizenAgent,
    "../src/data/costumes.ts": GetterAgents.CostumeAgent,
    "../src/data/elevators.ts": GetterAgents.ElevatorAgent,
    "../src/data/floors.ts": GetterAgents.FloorAgent,
    "../src/data/missions.ts": GetterAgents.MissionAgent,
    "../src/data/pets.ts": GetterAgents.PetAgent,
    "../src/data/roofs.ts": GetterAgents.RoofAgent,
} as const;

for (const [outputDestination, agent] of Object.entries(AgentOutputFileMap)) {
    console.log(`* Running agent: ${agent}`);
    const { runAgentMain, ...deviceStuff } = await bootstrapAgentOnRemote(agent, "172.17.0.1:27042");

    const result: string = await runAgentMain();
    const version: string | undefined = result.match(/TinyTower version: ([\d.]+)/gm)?.[0];
    const cleanedSource: string = result.replace(/\/\/ TinyTower version: ([\d.]+)/gm, "");

    const formattedBanner: string = sourceCodeBanner
        .replace("__filename", GetterAgents.BitbookAgent.agentFile)
        .replace("__date", new Date().toUTCString())
        .replace("__version", version?.split(":")[1]!.trim() || "unknown");

    const outputPath = new URL(outputDestination, import.meta.url);
    await fs.writeFile(outputPath, formattedBanner + cleanedSource);
    await cleanupAgent(deviceStuff);
    console.log(`* Done running agent: ${agent}`);
    console.log("---------------------------");
}

await container.stop();
await container.remove();
